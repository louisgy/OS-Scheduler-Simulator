package osschedulersimulator;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.time.LocalTime;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JTable;
import javax.swing.Timer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author georgy
 */
public class SChedulerUI extends javax.swing.JFrame {

    /**
     * Creates new form SChedulerUI
     */
    public SChedulerUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        fcfs = new javax.swing.JButton();
        rr = new javax.swing.JButton();
        sjf = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        fcfs.setText("FCFS");
        fcfs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fcfsActionPerformed(evt);
            }
        });

        rr.setText("RR");
        rr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rrActionPerformed(evt);
            }
        });

        sjf.setText("SJF");
        sjf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sjfActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Process #", "Completion Time", "Waiting Time", "Start Time", "Resume Time", "Suspend Time"
            }
        ));
        jScrollPane1.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 821, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(fcfs)
                        .addComponent(rr)
                        .addComponent(sjf)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fcfs)
                    .addComponent(rr)
                    .addComponent(sjf))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rrActionPerformed

        Data.threadfactory = new ThreadFactory();
        Data.threadfactory.createProcessList(Data.currentListSize);

        roundBn r = new roundBn();
        // event trigger by timer
        ActionListener listener = new ActionListener() {

            String[] columnNames = {"process #",
                "Completion TIme",
                "Waiting Time",
                "Start Time",
                "Resume Time",
                "Suspend Time"};

            @Override
            public void actionPerformed(ActionEvent e) {
       
                //update data for the table
                Object[][] data = Data.timeline.fillTable();
                // update table 
                jTable2 = new JTable(data, columnNames);
                // Update GUI
                jScrollPane1.setViewportView(jTable2);
                r.roll();
 
            }
        };
        //Timer that control fix interval to server a thread
        Data.timer = new Timer(3000, listener);
        // start timer
        Data.timer.start();

    }//GEN-LAST:event_rrActionPerformed

    private void sjfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sjfActionPerformed
         Data.btnTrigger = sjf;

        if (Data.threadfactory == null) {
            Data.threadfactory = new ThreadFactory();
            Data.threadfactory.createProcessList(Data.currentListSize);
        }
        
         String[] columnNames = {"process #",
                "Completion TIme",
                "Waiting Time",
                "Start Time",
                "Resume Time",
                "Suspend Time"};
         
    
                //update data for the table
                Object[][] data = Data.timeline.fillTable();
                // update table 
                jTable2 = new JTable(data, columnNames);
                // Update GUI
                jScrollPane1.setViewportView(jTable2);

        Manager manager = new Manager();

        manager.launchThread();
    }//GEN-LAST:event_sjfActionPerformed

    private void fcfsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fcfsActionPerformed
        
        Data.btnTrigger = fcfs;

        if (Data.threadfactory == null) {
            Data.threadfactory = new ThreadFactory();
            Data.threadfactory.createProcessList(Data.currentListSize);
        }
        
         String[] columnNames = {"process #",
                "Completion TIme",
                "Waiting Time",
                "Start Time",
                "Resume Time",
                "Suspend Time"};
         

                //update data for the table
                Object[][] data = Data.timeline.fillTable();
                // update table 
                jTable2 = new JTable(data, columnNames);
                // Update GUI
                jScrollPane1.setViewportView(jTable2);

        Manager manager = new Manager();

        manager.launchThread();


    }//GEN-LAST:event_fcfsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SChedulerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SChedulerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SChedulerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SChedulerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SChedulerUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton fcfs;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable2;
    private javax.swing.JButton rr;
    private javax.swing.JButton sjf;
    // End of variables declaration//GEN-END:variables
}
